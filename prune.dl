#define RDF_TYPE "<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>"
#define RDFS_SUBCLASS_OF "<http://www.w3.org/2000/01/rdf-schema#subClassOf>"
#define RDFS_LABEL "<http://www.w3.org/2000/01/rdf-schema#label>"
#define OWL_CLASS "<http://www.w3.org/2002/07/owl#Class>"
#define OWL_TRANSITIVE_PROPERTY "<http://www.w3.org/2002/07/owl#TransitiveProperty>"	

.type IRI <: symbol
.type BlankNode <: symbol
.type Literal <: symbol
.type Node = IRI | BlankNode
.type NodeOrLiteral = Node | Literal

.decl term(s: IRI)
.decl rdf(s: Node, p: IRI, o: NodeOrLiteral)
.decl ontrdf(s: Node, p: IRI, o: NodeOrLiteral)
.decl transitive(prop: Node)
.decl redundant(s: Node, p: IRI, o: NodeOrLiteral)
.decl nonredundant(s: Node, p: IRI, o: NodeOrLiteral, dot: symbol)

transitive(prop) :- ontrdf(prop, RDF_TYPE, OWL_TRANSITIVE_PROPERTY).
redundant(s, p, o) :- rdf(s, p, o), transitive(p), rdf(s, p, other), other != o, rdf(other, p, o), term(other), term(s), term(o).
nonredundant(s, p, o, ".") :- rdf(s, p, o), !redundant(s, p, o), term(s), term(o).
nonredundant(s, RDFS_LABEL, o, ".") :- ontrdf(s, RDFS_LABEL, o), term(s).

.input term
.input rdf
.input ontrdf
.output nonredundant